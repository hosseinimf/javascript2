{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\max\\\\Desktop\\\\react\\\\uppgift-222\\\\src\\\\Components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { GrAdd } from \"react-icons/gr\";\nimport { AiOutlineSave } from \"react-icons/ai\";\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\n\nfunction Form(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Update your item\",\n          value: input,\n          onChange: handleChange,\n          name: \"text\",\n          ref: inputRef,\n          className: \"todo-input edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"success\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineSave, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Write your task\",\n          value: input,\n          onChange: handleChange,\n          name: \"text\",\n          className: \"todo-input form-control\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"primary\",\n          className: \"todo-button\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = Form;\nexport default Form;\n{\n  /* <InputGroup className=\"mb-3\">\r\n     <FormControl\r\n       placeholder=\"Recipient's username\"\r\n       aria-label=\"Recipient's username\"\r\n       aria-describedby=\"basic-addon2\"\r\n     />\r\n     <InputGroup.Append>\r\n       <Button variant=\"primary\"><GrAdd/></Button>\r\n     </InputGroup.Append>\r\n   </InputGroup> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/max/Desktop/react/uppgift-222/src/Components/Form.js"],"names":["React","useState","useEffect","useRef","Button","InputGroup","FormControl","GrAdd","AiOutlineSave","ReactDOM","FontAwesomeIcon","faCoffee","Form","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAGA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,mCAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACY,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAGF,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACG,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,MAAAA,IAAI,EAAEjB;AAFO,KAAf;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAES,YAAhB;AAA8B,MAAA,SAAS,EAAC,MAAxC;AAAA,gBACGX,KAAK,CAACG,IAAN,gBACC;AAAA,gCACE;AACE,UAAA,WAAW,EAAC,kBADd;AAEE,UAAA,KAAK,EAAEF,KAFT;AAGE,UAAA,QAAQ,EAAEO,YAHZ;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,GAAG,EAAEH,QALP;AAME,UAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEM,YAAjB;AAA+B,UAAA,OAAO,EAAC,SAAvC;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,sBADD,gBAeC;AAAA,gCACE;AACE,UAAA,WAAW,EAAC,iBADd;AAEE,UAAA,KAAK,EAAEV,KAFT;AAGE,UAAA,QAAQ,EAAEO,YAHZ;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,SAAS,EAAC,yBALZ;AAME,UAAA,GAAG,EAAEH;AANP;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEM,YAAjB;AAAgC,UAAA,OAAO,EAAC,SAAxC;AAAkD,UAAA,SAAS,EAAC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA5DQZ,I;;KAAAA,I;AA8DT,eAAeA,IAAf;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAmB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport { GrAdd } from \"react-icons/gr\";\r\nimport { AiOutlineSave } from \"react-icons/ai\";\r\n\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Form(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <form onSubmit={handleSubmit} className='form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <Button onClick={handleSubmit} variant=\"success\">\r\n            <AiOutlineSave/>\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Write your task'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input form-control'\r\n            ref={inputRef}\r\n          />\r\n          <Button onClick={handleSubmit}  variant=\"primary\" className=\"todo-button\">\r\n            +\r\n          </Button>\r\n          \r\n        </>\r\n      )}\r\n    </form>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n\r\n{/* <InputGroup className=\"mb-3\">\r\n    <FormControl\r\n      placeholder=\"Recipient's username\"\r\n      aria-label=\"Recipient's username\"\r\n      aria-describedby=\"basic-addon2\"\r\n    />\r\n    <InputGroup.Append>\r\n      <Button variant=\"primary\"><GrAdd/></Button>\r\n    </InputGroup.Append>\r\n  </InputGroup> */}"]},"metadata":{},"sourceType":"module"}